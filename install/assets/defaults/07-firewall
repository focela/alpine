#!/command/with-contenv bash
#-----------------------------------------------------------------------------
# Firewall Initialization Script
#
# Purpose: Configures iptables and fail2ban security settings for container protection
# Context: Runs in s6-overlay environment as part of security setup sequence
# Note: Establishes network filtering and intrusion prevention system configuration
#-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------
# CONFIGURATION - IPTABLES FIREWALL SETTINGS
#-----------------------------------------------------------------------------
# IPTables rules file location and naming
IPTABLES_RULES_PATH=${IPTABLES_RULES_PATH:-"/assets/iptables/"}
IPTABLES_RULES_FILE=${IPTABLES_RULES_FILE:-"iptables.rules"}

#-----------------------------------------------------------------------------
# CONFIGURATION - FAIL2BAN CORE SETTINGS
#-----------------------------------------------------------------------------
# Fail2ban operational configuration
FAIL2BAN_BACKEND=${FAIL2BAN_BACKEND:-"AUTO"}
FAIL2BAN_CONFIG_PATH=${FAIL2BAN_CONFIG_PATH:-"/etc/fail2ban/"}

# Fail2ban startup behavior
FAIL2BAN_STARTUP_DELAY=${FAIL2BAN_STARTUP_DELAY:-"15"}

#-----------------------------------------------------------------------------
# CONFIGURATION - FAIL2BAN DATABASE SETTINGS
#-----------------------------------------------------------------------------
# Database storage configuration for ban tracking and persistence
FAIL2BAN_DB_TYPE=${FAIL2BAN_DB_TYPE:-"MEMORY"}
FAIL2BAN_DB_PATH=${FAIL2BAN_DB_PATH:-"/data/fail2ban/"}
FAIL2BAN_DB_FILE=${FAIL2BAN_DB_FILE:-"fail2ban.sqlite3"}

# Database maintenance - purge age in seconds (86400 = 24 hours)
FAIL2BAN_DB_PURGE_AGE=${FAIL2BAN_DB_PURGE_AGE:-"86400"}

#-----------------------------------------------------------------------------
# CONFIGURATION - FAIL2BAN LOGGING SETTINGS
#-----------------------------------------------------------------------------
# Logging configuration for fail2ban monitoring and debugging
FAIL2BAN_LOG_TYPE=${FAIL2BAN_LOG_TYPE:-"FILE"}
FAIL2BAN_LOG_PATH=${FAIL2BAN_LOG_PATH:-"/var/log/fail2ban/"}
FAIL2BAN_LOG_FILE=${FAIL2BAN_LOG_FILE:-"fail2ban.log"}
FAIL2BAN_LOG_LEVEL=${FAIL2BAN_LOG_LEVEL:-"INFO"}

#-----------------------------------------------------------------------------
# CONFIGURATION - FAIL2BAN NETWORK AND IP SETTINGS
#-----------------------------------------------------------------------------
# IP address exclusion and DNS configuration
# Note: Default ignores localhost, IPv6 localhost, and common private network ranges
FAIL2BAN_IGNORE_IP=${FAIL2BAN_IGNORE_IP:-"127.0.0.1/8 ::1 172.16.0.0/12 192.168.0.0/24"}

# Automatically ignore the server's own IP address to prevent self-lockout
FAIL2BAN_IGNORE_SELF=${FAIL2BAN_IGNORE_SELF:-"TRUE"}

# DNS resolution behavior for IP addresses - "warn" logs DNS failures without blocking
FAIL2BAN_USE_DNS=${FAIL2BAN_USE_DNS:-"warn"}

#-----------------------------------------------------------------------------
# CONFIGURATION - FAIL2BAN TIMING AND BEHAVIOR SETTINGS
#-----------------------------------------------------------------------------
# Attack detection thresholds and timing windows
FAIL2BAN_MAX_RETRY=${FAIL2BAN_MAX_RETRY:-"5"}

# Time window for finding attack attempts (10m = 10 minutes)
FAIL2BAN_TIME_FIND=${FAIL2BAN_TIME_FIND:-"10m"}

# Ban duration for detected attackers (10m = 10 minutes)
FAIL2BAN_TIME_BAN=${FAIL2BAN_TIME_BAN:-"10m"}
