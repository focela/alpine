#-------------------------------------------------------------------------------
# Fluent Bit Parsers Configuration
#
# Purpose: Define log parsing rules for various log formats and systems
# Context: Part of docker-alpine container logging infrastructure
# 
# Organization:
#   - Fluent Bit Internal Logs
#   - Generic Format Parsers
#   - System Log Parsers (RFC Standards)
#   - Application-Specific Parsers
#
# Usage: Referenced by fluent-bit.conf input and filter sections
# Documentation: https://docs.fluentbit.io/manual/pipeline/parsers
#
# Focela Labs - Container Infrastructure & DevOps Automation
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# FLUENT BIT INTERNAL LOGS
#-------------------------------------------------------------------------------
# Parser for Fluent Bit's own log output format
# Format: [timestamp] [severity] [category] message
# Example: [2024/01/15 10:30:45] [info] [engine] started
[PARSER]
    Name        fluentbit
    Format      regex
    Regex       ^\[(?<time>[^\]]*)\] \[(?<severity>[^\]]*)\] \[(?<category>[^\]]*)\] (?<message>.*)
    Time_Key    time
    Time_Format %Y/%m/%d %H:%M:%S

#-------------------------------------------------------------------------------
# GENERIC FORMAT PARSERS
#-------------------------------------------------------------------------------
# JSON parser for structured log data
# Handles any valid JSON log entry with automatic field extraction
# Note: Uncomment Time_Key and Time_Format if JSON contains timestamp fields
[PARSER]
    Name        json
    Format      json
    # Time_Key   time
    # Time_Format %d/%b/%Y:%H:%M:%S %z

#-------------------------------------------------------------------------------
# SYSTEM LOG PARSERS - RFC STANDARDS
#-------------------------------------------------------------------------------
# RFC 5424 (Modern Syslog) Parser
# Format: <priority>version timestamp hostname app-name procid msgid structured-data msg
# Example: <165>1 2024-01-15T10:30:45.123456+00:00 hostname app 1234 ID [meta] message
# Used by: Modern syslog daemons, rsyslog, syslog-ng
[PARSER]
    Name        syslog-rfc5424
    Format      regex
    Regex       ^\<(?<pri>[0-9]{1,5})\>1 (?<time>[^ ]+) (?<host>[^ ]+) (?<ident>[^ ]+) (?<pid>[-0-9]+) (?<msgid>[^ ]+) (?<extradata>(\[(.*?)\]|-)) (?<message>.+)$
    Time_Key    time
    Time_Format %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep   On

# RFC 3164 (Legacy Syslog) Parser - Local Format
# Format: <priority>timestamp hostname app[pid]: message (without hostname for local logs)
# Example: <165>Jan 15 10:30:45 app[1234]: message
# Used by: Local system logs, legacy syslog implementations
[PARSER]
    Name        syslog-rfc3164-local
    Format      regex
    Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
    Time_Key    time
    Time_Format %b %d %H:%M:%S
    Time_Keep   On

# RFC 3164 (Legacy Syslog) Parser - Remote Format
# Format: <priority>timestamp hostname app[pid]: message (with hostname for remote logs)
# Example: <165>Jan 15 10:30:45 server app[1234]: message
# Used by: Remote syslog servers, network syslog forwarding
[PARSER]
    Name        syslog-rfc3164
    Format      regex
    Regex       /^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
    Time_Key    time
    Time_Format %b %d %H:%M:%S
    Time_Keep   On

#-------------------------------------------------------------------------------
# APPLICATION-SPECIFIC PARSERS
#-------------------------------------------------------------------------------
# Zabbix Agent Classic Format Parser
# Format: pid:timestamp message
# Example: 1234:20240115:1030.45 message content
# Used by: Zabbix Agent versions prior to 4.0
[PARSER]
    Name        zabbix-agent-classic
    Format      regex
    Regex       ^  (?<pid>[-0-9]+):(?<time>[^ ]+) *(?<message>.*)
    Time_Key    time
    # Note: Time format needs verification - uncomment and adjust as needed
    # Time_Format %Y%m%d:%H%M.%s

# Zabbix Agent Modern Format Parser
# Format: timestamp message
# Example: 2024/01/15 10:30:45 message content
# Used by: Zabbix Agent versions 4.0 and later
[PARSER]
    Name        zabbix-agent-modern
    Format      regex
    Regex       ^(?<time>[^ ]* {1}[^ ]*[^ ]*) *(?<message>.*)$
    Time_Key    time
    # Note: Time format needs verification - uncomment and adjust as needed
    # Time_Format %Y/%m/%d %H:%M:%S
